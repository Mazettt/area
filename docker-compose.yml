version: "3"

services:
  database:
    container_name: "area-database"
    build:
      context: ./backend
      dockerfile: Dockerfile-db
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER_OTHER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    volumes:
      - $PWD/area-database:/var/lib/mysql
    networks:
      areaNetwork:
        ipv4_address: $MYSQL_HOST
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  server:
    container_name: "area-server"
    build:
      context: ./backend
      dockerfile: Dockerfile-api
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    networks:
      areaNetwork:
        ipv4_address: $API_HOST_NAME
    ports:
      - "$API_PORT:$API_PORT"
    restart: always


  client_mobile:
    container_name: "area-client_mobile"
    build:
      context: ./mobile
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - $PWD/client:/output

  client_web:
    container_name: "area-client_web"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - $PWD/client/web:/app/build
    depends_on:
      - server
      - client_mobile
    networks:
      areaNetwork:
        ipv4_address: $WEBAPP_HOST_NAME
    ports:
      - "8081:80"
    restart: on-failure

networks:
  areaNetwork:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.50.0/24"
          gateway: "192.168.50.1"

